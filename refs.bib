@Book{lamport:86,
  author =    {Leslie Lamport},
  title =        {\LaTeX: A document preparation system},
  publisher =    {Addision-Wesley},
  year =         1986
}

@PhdThesis{prabhu:xx,
  author =       {Prabhu Ramachandran},
  title =        {\LaTeX\ class for dissertations submitted to {IIT-M}},
  school =       {Department of Aerospace Engineering, IIT-Madras},
  year =         2004,
  address =      {Chennai -- 600036},
  month =        {July}
}

@InProceedings{viz:mayavi,
  author =       {Prabhu Ramachandran},
  title =        {{MayaVi}: A free tool for {CFD} data visualization},
  booktitle =    {4th Annual CFD Symposium},
  year =         2001,
  month =        {August},
  organization = {Aeronautical Society of India},
  note =         {Software available at: {http://mayavi.sf.net}}
}

@Article{pan:pr:flat-fst,
  author =       {Prabhu Ramachandran and S. C. Rajan and M. Ramakrishna},
  title =        {A fast, two-dimensional panel method},
  journal =      {SIAM Journal on Scientific Computing},
  year =         2003,
  volume =       24,
  number =       6,
  pages =        {1864--1878}
}

@Misc{py:python,
  author =    {Guido van Rossum and others},
  title =     {The {Python} programming language},
  year =         {1991--},
  url = "http://www.python.org/"
}

@article{raschka2020machine,
  title={Machine Learning in Python: Main developments and technology trends in data science, machine learning, and artificial intelligence},
  author={Raschka, Sebastian and Patterson, Joshua and Nolet, Corey},
  journal={arXiv preprint arXiv:2002.04803},
  year={2020}
}

@online{gplearn,
  title={gplearn: Genetic Programming in Python, with a scikit-learn inspired API},
  author={Trevor Stephens},
  year={2015},
  url={https://github.com/trevorstephens/gplearn},
}

@book{Koza92,
  added-at = {2008-11-22T15:57:31.000+0100},
  address = {Cambridge, MA, USA},
  author = {Koza, John R.},
  biburl = {https://www.bibsonomy.org/bibtex/27573e564bc5369e1a853e74b3ac62607/emanuel},
  interhash = {e8307fb6cf4ee27405142256d98c4c9e},
  intrahash = {7573e564bc5369e1a853e74b3ac62607},
  isbn = {0-262-11170-5},
  keywords = {enumerative_ip gp induction inductive_programming program_evolution program_synthesis},
  publisher = {MIT Press},
  timestamp = {2008-11-22T15:57:31.000+0100},
  title = {Genetic Programming: {O}n the Programming of Computers by Means of Natural Selection},
  year = 1992
}

@article{luke:2000:2ftcaGP,
  abstract = {Genetic programming is an evolutionary optimization
                 method that produces functional programs to solve a
                 given task. These programs commonly take the form of
                 trees representing LISP s-expressions, and a typical
                 evolutionary run produces a great many of these trees.
                 For this reason, a good tree generation algorithm is
                 very important to genetic programming. This paper
                 presents two new tree-generation algorithms for genetic
                 programming and for strongly-typed genetic programming,
                 a common variant. These algorithms are fast, allow the
                 user to request specific tree sizes, and guarantee
                 probabilities of certain nodes appearing in trees. The
                 paper analyzes these two algorithms and compares them
                 with traditional and recently proposed approaches.},
  added-at = {2008-06-19T17:35:00.000+0200},
  author = {Luke, Sean},
  biburl = {https://www.bibsonomy.org/bibtex/2788f8ce76795eab433443e38bb61b417/brazovayeye},
  interhash = {ae9f9a3a7c853e3db8ef4b656cd2713f},
  intrahash = {788f8ce76795eab433443e38bb61b417},
  journal = {IEEE Transactions on Evolutionary Computation},
  keywords = {Bloat Creation, Growth, Initialization, Introns, Mutation, Population Subtree Tree algorithms, genetic programming,},
  month = {September},
  number = 3,
  pages = {274--283},
  size = {9 pages},
  timestamp = {2008-06-19T17:45:57.000+0200},
  title = {Two Fast Tree-Creation Algorithms for Genetic
                 Programming},
  url = {http://citeseer.ist.psu.edu/409667.html},
  volume = 4,
  year = 2000
}

@article{scikit-learn,
 title={Scikit-learn: Machine Learning in {P}ython},
 author={Pedregosa, F. and Varoquaux, G. and Gramfort, A. and Michel, V.
         and Thirion, B. and Grisel, O. and Blondel, M. and Prettenhofer, P.
         and Weiss, R. and Dubourg, V. and Vanderplas, J. and Passos, A. and
         Cournapeau, D. and Brucher, M. and Perrot, M. and Duchesnay, E.},
 journal={Journal of Machine Learning Research},
 volume={12},
 pages={2825--2830},
 year={2011}
}

@book{poli08:fieldguide,
  abstract = {Genetic programming (GP) is a systematic,
                 domain-independent method for getting computers to
                 solve problems automatically starting from a high-level
                 statement of what needs to be done. Using ideas from
                 natural evolution, GP starts from an ooze of random
                 computer programs, and progressively refines them
                 through processes of mutation and sexual recombination,
                 until high-fitness solutions emerge. All this without
                 the user having to know or specify the form or
                 structure of solutions in advance. GP has generated a
                 plethora of human-competitive results and applications,
                 including novel scientific discoveries and patentable
                 inventions.

                 This unique overview of this exciting technique is
                 written by three of the most active scientists in GP.
                 See www.gp-field-guide.org.uk for more information on
                 the book.

                 Table of Contents

                 1 Introduction

                 1.1 Genetic Programming in a Nutshell

                 1.2 Getting Started

                 1.3 Prerequisites

                 1.4 Overview of this Field Guide

                 Part I Basics

                 2 Representation, Initialisation and Operators in
                 Tree-based GP

                 2.1 Representation

                 2.2 Initialising the Population

                 2.3 Selection

                 2.4 Recombination and Mutation},
  added-at = {2008-06-19T17:46:40.000+0200},
  author = {Poli, Riccardo and Langdon, William B. and McPhee, Nicholas Freitag},
  biburl = {https://www.bibsonomy.org/bibtex/2f48362d42a42bda317f0bbc62617bec4/brazovayeye},
  interhash = {938fd34df032d412c170727b7ccbdc9a},
  intrahash = {f48362d42a42bda317f0bbc62617bec4},
  isbn13 = {978-1-4092-0073-4},
  keywords = {algorithms, artificial automatic computation evolutionary genetic intelligence, learning, machine programming,},
  note = {(With contributions by J. R. Koza)},
  notes = {http://www.gp-field-guide.org.uk/},
  publisher = {Published via \texttt{http://lulu.com} and freely
                 available at
                 \texttt{http://www.gp-field-guide.org.uk}},
  size = {250 pages},
  timestamp = {2008-06-19T17:49:49.000+0200},
  title = {A field guide to genetic programming},
  url = {http://www.gp-field-guide.org.uk},
  year = 2008
}

@misc{staats2017tensorflow,
      title={TensorFlow Enabled Genetic Programming}, 
      author={Kai Staats and Edward Pantridge and Marco Cavaglia and Iurii Milovanov and Arun Aniyan},
      year={2017},
      eprint={1708.03157},
      archivePrefix={arXiv},
      primaryClass={cs.DC}
}

@misc{Dua:2019 ,
  author = "Dua, Dheeru and Graff, Casey",
  year = "2017",
  title = "{UCI} Machine Learning Repository",
  url = "http://archive.ics.uci.edu/ml",
  institution = "University of California, Irvine, School of Information and Computer Sciences" 
} 

@article{perkis, 
  title={Stack-based genetic programming}, 
  DOI={10.1109/icec.1994.350025},
  year="1994", 
  journal={Proceedings of the First IEEE Conference on Evolutionary Computation. IEEE World Congress on Computational Intelligence}, 
  author={Perkis, T.}
} 
